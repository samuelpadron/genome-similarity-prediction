# @package _global_
defaults:
  - /pipeline: pair_alignment
  - override /scheduler: cosine_warmup_timm

model:
  _name_: dna_embedding
  d_model: 256
  n_layer: 4
  d_inner: ${eval:4 * ${.d_model}}
  vocab_size: 12
  resid_dropout: 0.0
  embed_dropout: 0.1
  fused_mlp: False # figure out how to use fused MLP, maybe only with bf16 + a100
  fused_dropout_add_ln: True
  residual_in_fp32: True
  pad_vocab_size_multiple: 8
  return_hidden_state: True
  layer:
    _name_: hyena
    emb_dim: 5
    filter_order: 64
    local_order: 3
    l_max: 32770  # required to be set the same as the pretrained model if using, don't forget the +2!  ${eval:${dataset.max_length}+2}
    modulate: True
    w: 10
    lr: ${optimizer.lr}
    wd: 0.0
    lr_pos_emb: 0.0

task:
  _name_: masked_multiclass
  loss: cross_entropy
  metrics:
    - accuracy

trainer:
  accelerator: gpu
  devices: 1
  num_nodes: 1
  accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 100
  precision: 16  # bf16 only a100
  gradient_clip_val: 1.0
  # strategy: null

dataset:
  # batch_size: 32  # Per GPU
  batch_size: 32
  max_length: 1026 # select max that you want for this dataset
  dataset_name: 'pair_alignment'
  dest_path: '/home/spadronalcala/Documents/thesis/hyena-dna-genome-similarity/data/pair_alignment'
  d_output: 2  # binary classification by default
  use_padding: True
  padding_side: 'left'
  add_eos: False
  train_len: 108770  # update this according to above table
  __l_max: ${.max_length}
  tokenizer_name: char
  # rc_aug: true  # reverse complement augmentation.  Didn't seem to help for human_nontata_promoters, but could be wrong

scheduler:
  t_in_epochs: False
  t_initial: ${eval:${div_up:${dataset.train_len}, ${train.global_batch_size}} * ${trainer.max_epochs}}
  warmup_lr_init: 1e-6
  warmup_t: ${eval:${div_up:${dataset.train_len}, ${train.global_batch_size}} * ${trainer.max_epochs} * 0.01}
  lr_min: ${eval:0.1 * ${optimizer.lr}}

optimizer:
  lr: 6e-4
  weight_decay: 0.1

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: 32
  remove_test_loader_in_eval: False  # there is a test set in this benchmark
  pretrained_model_strict_load: False  # false allows encoder/decoder to be used if new model uses it
  # for loading backbone and not head, requires both of these flags below
  pretrained_model_path: /scratch/spadronalcala/hyenadna-small-32k-seqlen/weights.ckpt
